package banister

import (
	"fmt"
	"github.com/dave/jennifer/jen"
	"os"
	"path/filepath"
)

type GenerateConfig struct {
	PackageName string
	OutputDir   string
	Models      []Model
}

func Generate(c *GenerateConfig) error {
	f := generateJen(c)
	err := os.MkdirAll(c.OutputDir, 0755)
	if err != nil {
		return err
	}

	err = f.Save(filepath.Join(c.OutputDir, "banister.go"))
	if err != nil {
		return err
	}

	fmt.Println("Generated source to", c.OutputDir)
	return nil
}

func GenerateToString(c *GenerateConfig) string {
	return generateJen(c).GoString()
}

func generateJen(c *GenerateConfig) *jen.File {
	f := jen.NewFilePathName(c.OutputDir, c.PackageName)
	f.PackageComment("Code generated by banister; DO NOT EDIT.")

	// Generate things per model
	for _, m := range c.Models {
		NewModelGenerator(f, m).Generate()
		NewModelConfigGenerator(f, m).Generate()
	}

	return f
}
